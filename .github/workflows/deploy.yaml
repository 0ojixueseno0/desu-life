name: Deploy Workflow

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name of the Release'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Download Release Asset
        uses: actions/github-script@v6
        with:
          script: |
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: context.payload.inputs.tag_name
            });
            const asset = release.assets.find(a => a.name === 'release.tar.gz');
            if (!asset) throw new Error('Release asset not found!');
            const { data } = await github.rest.repos.getReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              asset_id: asset.id,
              headers: { accept: 'application/octet-stream' }
            });
            require('fs').writeFileSync('./release.tar.gz', Buffer.from(data, 'binary'));

      - name: Generate Rsync Password
        run: |
          set +x
          PASSWORD=$(eval "${{ secrets.RSYNC_PASSWORD_COMMAND }}" | awk '{ print $2 }')
          echo "$PASSWORD" > /tmp/rsync.password
          chmod 600 /tmp/rsync.password
          unset PASSWORD

      - name: Extract and Deploy
        run: |
          tar -xzvf release.tar.gz -C ./dist
          echo "Deploying to server..."
          rsync -avz --password-file=/tmp/rsync.password ./dist/ {{ secrets.RSYNC_ADDRESS }} \
            --delete \
            --delete-excluded \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="rsync.password" \
            --port=${{ secrets.RSYNC_PORT }}
